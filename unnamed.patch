Index: Shopz.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Shopz.iml	(date 1584423922578)
+++ Shopz.iml	(date 1584423922578)
@@ -0,0 +1,2 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="JAVA_MODULE" version="4" />
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/misc.xml	(date 1584423922632)
+++ .idea/misc.xml	(date 1584423922632)
@@ -0,0 +1,14 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ExternalStorageConfigurationManager" enabled="true" />
+  <component name="MavenProjectsManager">
+    <option name="originalFiles">
+      <list>
+        <option value="$PROJECT_DIR$/pom.xml" />
+      </list>
+    </option>
+  </component>
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_8" project-jdk-name="1.8" project-jdk-type="JavaSDK">
+    <output url="file://$PROJECT_DIR$/out" />
+  </component>
+</project>
\ No newline at end of file
Index: src/main/java/model/Product.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/model/Product.java	(date 1584425287467)
+++ src/main/java/model/Product.java	(date 1584425287467)
@@ -0,0 +1,95 @@
+package model;
+
+public class Product {
+
+    private String id;
+    private String name;
+    private double price;
+    private String prices;
+    private int quantity;
+    private String quantitys;
+    private String urlImage;
+
+    public Product(String id, String name, double price, int quantity, String urlImage) {
+        this.id = id;
+        this.name = name;
+        this.price = price;
+        this.quantity = quantity;
+        this.urlImage = urlImage;
+    }
+    public Product(String id, String name, double price, int quantity) {
+        this.id = id;
+        this.name = name;
+        this.price = price;
+        this.quantity = quantity;
+    }
+    public Product(String id, String name, String price, String quantity, String urlImage) {
+        this.id = id;
+        this.name = name;
+        this.prices =price;
+        this.quantitys = quantity;
+        this.urlImage = urlImage;
+    }
+
+    public Product(String id, String name, String price, String quantity) {
+        this.id = id;
+        this.name = name;
+        this.prices =price;
+        this.quantitys = quantity;
+    }
+
+    public String getPrices() {
+        return prices;
+    }
+
+    public void setPrices(String prices) {
+        this.prices = prices;
+    }
+
+    public String getId() {
+        return id;
+    }
+
+    public void setId(String id) {
+        this.id = id;
+    }
+
+    public String getName() {
+        return name;
+    }
+
+    public void setName(String name) {
+        this.name = name;
+    }
+
+    public double getPrice() {
+        return price;
+    }
+
+    public void setPrice(double price) {
+        this.price = price;
+    }
+
+    public int getQuantity() {
+        return quantity;
+    }
+
+    public void setQuantity(int quantity) {
+        this.quantity = quantity;
+    }
+
+    public String getQuantitys() {
+        return quantitys;
+    }
+
+    public void setQuantitys(String quantitys) {
+        this.quantitys = quantitys;
+    }
+
+    public String getUrlImage() {
+        return urlImage;
+    }
+    public void setUrlImage(String urlImage) {
+        this.urlImage = urlImage;
+    }
+}
Index: src/main/java/ConnectDataBase/ProductDataBase.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/ConnectDataBase/ProductDataBase.java	(date 1584425287421)
+++ src/main/java/ConnectDataBase/ProductDataBase.java	(date 1584425287421)
@@ -0,0 +1,142 @@
+package ConnectDataBase;//panut
+import model.Product;
+
+import java.sql.*;
+import java.util.ArrayList;
+
+public class ProductDataBase {
+    private static String dbURL = "jdbc:sqlite:Database.db";
+    private static String dbName = "org.sqlite.JDBC";
+
+    public  ArrayList<Product> getAllProduct(){
+        ArrayList<Product>products=new ArrayList<>();
+        try{
+            Class.forName(dbName);
+            Connection connection = DriverManager.getConnection(dbURL);
+            if(connection != null){
+                String query = "select * from Product";
+                Statement statement = connection.createStatement();
+                ResultSet resultSet = statement.executeQuery(query);
+                while (resultSet.next()){
+                    String id =resultSet.getString("ID");
+                    String name=resultSet.getString("Name");
+                    int a = resultSet.getInt("Quantity");
+                    double p = resultSet.getDouble("Price");
+                    String url = resultSet.getString("urlImage");
+                    products.add(new Product(id,name,p,a,url));
+                }
+                connection.close();
+            }
+        } catch (ClassNotFoundException e) {
+            e.printStackTrace();
+        } catch (SQLException e) {
+            e.printStackTrace();
+        }
+        return products;
+    }
+
+    public void addProductToDB(Product product){
+        try {
+            Class.forName(dbName);
+            Connection connection = DriverManager.getConnection(dbURL);
+            if(connection != null){
+                String query = "insert into Product (ID,Name,Quantity,Price,urlImage) values " +
+                        "('"+product.getId()+"','"+product.getName()+"',"+product.getQuantity()+","+product.getPrice()+",'"+product.getUrlImage()+"')";
+                Statement p = connection.createStatement();
+                p.executeUpdate(query);
+                connection.close();
+            }
+        } catch (ClassNotFoundException e) {
+            e.printStackTrace();
+        } catch (SQLException e) {
+            e.printStackTrace();
+        }
+    }
+    public  void deleteProduct(Product product){
+        try{
+            Class.forName(dbName);
+            Connection connection = DriverManager .getConnection(dbURL);
+            if(connection != null){
+                String query  = "Delete from Product where ID == '" + product.getId() + "'";
+                PreparedStatement p = connection.prepareStatement(query);
+                p.executeUpdate();
+                connection.close();
+            }
+        } catch (ClassNotFoundException e) {
+            e.printStackTrace();
+        } catch (SQLException e) {
+            e.printStackTrace();
+        }
+    }
+    public static void update(Product product){
+        try {
+            Class.forName(dbName);
+            Connection connection = DriverManager .getConnection(dbURL);
+            if(connection != null){
+                String query  = " UPDATE Product SET Name= '"+product.getName()+"',Quantity = "+product.getQuantity()
+                        +",Price = "+product.getPrice()+" WHERE ID = "+product.getId()+";";
+                PreparedStatement p = connection.prepareStatement(query);
+                p.executeUpdate();
+                connection.close();
+                System.out.println("update complete");
+            }
+        } catch (ClassNotFoundException e) {
+            e.printStackTrace();
+        } catch (SQLException e) {
+            e.printStackTrace();
+        }
+    }
+    public Product getProduct(String productID){
+
+        Product product = null;
+        try{
+            Class.forName(dbName);
+            Connection connection = DriverManager.getConnection(dbURL);
+            if(connection != null){
+                String query = "select * from Product WHERE Product.ID='"+productID+"'";
+                Statement statement = connection.createStatement();
+                ResultSet resultSet = statement.executeQuery(query);
+                String id =resultSet.getString("ID");
+                String name=resultSet.getString("Name");
+                int a = resultSet.getInt("Quantity");
+                double p = resultSet.getDouble("Price");
+                String url = resultSet.getString("urlImage");
+                product=new Product(id,name,p,a,url);
+                connection.close();
+            }
+        } catch (ClassNotFoundException e) {
+            e.printStackTrace();
+        } catch (SQLException e) {
+            e.printStackTrace();
+        }
+        return product;
+    }
+
+
+    public ArrayList<Product> getAllProductS() {
+        ArrayList<Product>products=new ArrayList<>();
+        try{
+            Class.forName(dbName);
+            Connection connection = DriverManager.getConnection(dbURL);
+            if(connection != null){
+                String query = "select * from Product";
+                Statement statement = connection.createStatement();
+                ResultSet resultSet = statement.executeQuery(query);
+                while (resultSet.next()){
+                    String id =resultSet.getString("ID");
+                    String name=resultSet.getString("Name");
+                    int a = resultSet.getInt("Quantity");
+                    double p = resultSet.getDouble("Price");
+                    String url = resultSet.getString("urlImage");
+                    products.add(new Product(id,name,String.format("%,.2f",p),String.format("%,d",a),url));
+                }
+                connection.close();
+            }
+        } catch (ClassNotFoundException e) {
+            e.printStackTrace();
+        } catch (SQLException e) {
+            e.printStackTrace();
+        }
+        return products;
+    }
+}
\ No newline at end of file
Index: .idea/uiDesigner.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/uiDesigner.xml	(date 1584424138079)
+++ .idea/uiDesigner.xml	(date 1584424138079)
@@ -0,0 +1,124 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="Palette2">
+    <group name="Swing">
+      <item class="com.intellij.uiDesigner.HSpacer" tooltip-text="Horizontal Spacer" icon="/com/intellij/uiDesigner/icons/hspacer.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="1" hsize-policy="6" anchor="0" fill="1" />
+      </item>
+      <item class="com.intellij.uiDesigner.VSpacer" tooltip-text="Vertical Spacer" icon="/com/intellij/uiDesigner/icons/vspacer.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="1" anchor="0" fill="2" />
+      </item>
+      <item class="javax.swing.JPanel" icon="/com/intellij/uiDesigner/icons/panel.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JScrollPane" icon="/com/intellij/uiDesigner/icons/scrollPane.png" removable="false" auto-create-binding="false" can-attach-label="true">
+        <default-constraints vsize-policy="7" hsize-policy="7" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JButton" icon="/com/intellij/uiDesigner/icons/button.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="0" fill="1" />
+        <initial-values>
+          <property name="text" value="Button" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JRadioButton" icon="/com/intellij/uiDesigner/icons/radioButton.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="RadioButton" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JCheckBox" icon="/com/intellij/uiDesigner/icons/checkBox.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="CheckBox" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JLabel" icon="/com/intellij/uiDesigner/icons/label.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="0" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="Label" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JTextField" icon="/com/intellij/uiDesigner/icons/textField.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JPasswordField" icon="/com/intellij/uiDesigner/icons/passwordField.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JFormattedTextField" icon="/com/intellij/uiDesigner/icons/formattedTextField.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTextArea" icon="/com/intellij/uiDesigner/icons/textArea.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTextPane" icon="/com/intellij/uiDesigner/icons/textPane.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JEditorPane" icon="/com/intellij/uiDesigner/icons/editorPane.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JComboBox" icon="/com/intellij/uiDesigner/icons/comboBox.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="2" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JTable" icon="/com/intellij/uiDesigner/icons/table.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JList" icon="/com/intellij/uiDesigner/icons/list.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="2" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTree" icon="/com/intellij/uiDesigner/icons/tree.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTabbedPane" icon="/com/intellij/uiDesigner/icons/tabbedPane.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
+          <preferred-size width="200" height="200" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JSplitPane" icon="/com/intellij/uiDesigner/icons/splitPane.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
+          <preferred-size width="200" height="200" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JSpinner" icon="/com/intellij/uiDesigner/icons/spinner.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JSlider" icon="/com/intellij/uiDesigner/icons/slider.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JSeparator" icon="/com/intellij/uiDesigner/icons/separator.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JProgressBar" icon="/com/intellij/uiDesigner/icons/progressbar.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1" />
+      </item>
+      <item class="javax.swing.JToolBar" icon="/com/intellij/uiDesigner/icons/toolbar.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1">
+          <preferred-size width="-1" height="20" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JToolBar$Separator" icon="/com/intellij/uiDesigner/icons/toolbarSeparator.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="0" anchor="0" fill="1" />
+      </item>
+      <item class="javax.swing.JScrollBar" icon="/com/intellij/uiDesigner/icons/scrollbar.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="0" anchor="0" fill="2" />
+      </item>
+    </group>
+  </component>
+</project>
\ No newline at end of file
Index: src/main/java/controller/itemdetailController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/controller/itemdetailController.java	(date 1584425458015)
+++ src/main/java/controller/itemdetailController.java	(date 1584425458015)
@@ -0,0 +1,4 @@
+package controller;
+
+public class itemdetailController {
+}
Index: src/main/java/controller/managerhomeController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/controller/managerhomeController.java	(date 1584425457879)
+++ src/main/java/controller/managerhomeController.java	(date 1584425457879)
@@ -0,0 +1,4 @@
+package controller;
+
+public class managerhomeController {
+}
Index: .idea/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/compiler.xml	(date 1584426384986)
+++ .idea/compiler.xml	(date 1584426384986)
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="CompilerConfiguration">
+    <annotationProcessing>
+      <profile name="Maven default annotation processors profile" enabled="true">
+        <sourceOutputDir name="target/generated-sources/annotations" />
+        <sourceTestOutputDir name="target/generated-test-sources/test-annotations" />
+        <outputRelativeToContentRoot value="true" />
+        <module name="Shopz" />
+      </profile>
+    </annotationProcessing>
+  </component>
+</project>
\ No newline at end of file
Index: src/main/java/controller/itemlistController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/controller/itemlistController.java	(date 1584425510919)
+++ src/main/java/controller/itemlistController.java	(date 1584425510919)
@@ -0,0 +1,369 @@
+package controller;
+
+import ConnectDataBase.ProductDataBase;
+import com.github.sarxos.webcam.Webcam;
+import com.github.sarxos.webcam.WebcamPanel;
+import com.google.zxing.*;
+import com.google.zxing.client.j2se.BufferedImageLuminanceSource;
+import com.google.zxing.common.HybridBinarizer;
+import javafx.collections.FXCollections;
+import javafx.collections.ObservableList;
+import javafx.embed.swing.SwingNode;
+import javafx.event.ActionEvent;
+import javafx.fxml.FXML;
+import javafx.fxml.FXMLLoader;
+import javafx.scene.Parent;
+import javafx.scene.Scene;
+import javafx.scene.control.*;
+import javafx.scene.control.Button;
+import javafx.scene.control.Label;
+import javafx.scene.control.TextField;
+import javafx.scene.control.cell.PropertyValueFactory;
+import javafx.scene.control.cell.TextFieldTableCell;
+import javafx.scene.image.Image;
+import javafx.scene.image.ImageView;
+import javafx.scene.layout.AnchorPane;
+import javafx.stage.FileChooser;
+import javafx.stage.Stage;
+import model.Product;
+
+import javax.swing.*;
+import java.awt.*;
+import java.awt.image.BufferedImage;
+import java.io.File;
+import java.io.IOException;
+import java.util.ArrayList;
+
+
+public class itemlistController {
+    @FXML
+    private TableView<Product> tableView;
+    @FXML
+    private TableColumn ID,name,quantity,price;
+    private ProductDataBase productDataBase =new ProductDataBase();
+    @FXML
+    private TextField textID,textName,textAmount, textPrice;
+    @FXML
+    private Button addBtn,deletBtn;
+    @FXML
+    private Label eID,eName,eAmount,ePrice;
+    @FXML private ImageView upload;
+
+    @FXML
+    private AnchorPane webcamPane;
+    private Webcam webCam = null;
+
+    private File file;
+    private String srcImage="";
+    private Button buttonBack;
+    final SwingNode swingNode = new SwingNode();
+
+
+    LuminanceSource source =null;
+    @FXML
+    public void initialize(){
+        ID.setCellValueFactory(new PropertyValueFactory<Product,String>("id"));
+        ID.setStyle("-fx-alignment: CENTER;");
+        name.setCellValueFactory(new PropertyValueFactory<Product,String>("name"));
+        quantity.setCellValueFactory(new PropertyValueFactory<Product, String>("quantitys"));
+        price.setCellValueFactory(new PropertyValueFactory<Product,String>("prices"));
+        price.setStyle("-fx-alignment: center-right;");
+        quantity.setStyle("-fx-alignment: center-right;");
+        showTable();
+        tableView.setEditable(true);
+        name.setCellFactory(TextFieldTableCell.forTableColumn());
+        quantity.setCellFactory(TextFieldTableCell.forTableColumn());
+        price.setCellFactory(TextFieldTableCell.forTableColumn());
+        webcamPane =new AnchorPane();
+        Webcam webcam = Webcam.getDefault();   //Generate Webcam Object
+        webcam.setViewSize(new Dimension(640,480));
+        WebcamPanel webcamPanel = new WebcamPanel(webcam,true);
+        webcamPanel.setMirrored(false);
+//        SwingUtilities.invokeLater(() -> {
+//            if(webcamPanel != null) {
+//                swingNode.setContent(webcamPanel);
+//            }
+//        });
+//        Platform.runLater(() -> {
+//            webcamPane.getChildren().clear();
+//            webcamPane.getChildren().add(swingNode);
+//        });
+        JFrame jFrame = new JFrame();
+        jFrame.add(webcamPanel);
+        jFrame.pack();
+        jFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
+        jFrame.setLocationRelativeTo(null);
+        jFrame.setVisible(true);
+
+        do {
+            try {
+                BufferedImage image = webcam.getImage();
+                source = new BufferedImageLuminanceSource(image);
+                BinaryBitmap bitmap = new BinaryBitmap(new HybridBinarizer(source));
+                Result result = new MultiFormatReader().decode(bitmap);
+                if(result.getText() != null) {
+                    System.out.println(result.getText());
+                    webcam.close();
+                    break;
+                }
+
+            }catch (NotFoundException e ) {
+                //pass
+            }
+
+        } while(true);
+
+    }
+
+
+
+
+
+
+
+
+
+    public ObservableList<Product> addData(ArrayList<Product> data){
+        ObservableList<Product> temp= FXCollections.observableArrayList();
+        for (Product i:data){
+            temp.add(i);
+        }
+        return temp;
+    }
+    void showTable(){
+        tableView.setItems(addData(productDataBase.getAllProductS()));
+    }
+
+    @FXML
+    public void handleAddbtn(ActionEvent event) throws Exception {
+        if((textID.getText().isEmpty()||textName.getText().isEmpty()||textAmount.getText().isEmpty()||textPrice.getText().isEmpty())||srcImage.isEmpty()){
+            if(textID.getText().isEmpty()){
+                Alert alert = new Alert(Alert.AlertType.ERROR, "ID is Empty",ButtonType.OK);
+                alert.showAndWait();
+//               eID.setText("ID is Empty");
+            } if (textName.getText().isEmpty()){
+                Alert alert = new Alert(Alert.AlertType.ERROR, "Name is Empty",ButtonType.OK);
+                alert.showAndWait();
+                //eName.setText("Amount is Empty");
+            }if(textAmount.getText().isEmpty()){
+                Alert alert = new Alert(Alert.AlertType.ERROR, "Amount is Empty",ButtonType.OK);
+                alert.showAndWait();
+                //  eAmount.setText("Amount is Empty");
+            }if(textPrice.getText().isEmpty()) {
+                Alert alert = new Alert(Alert.AlertType.ERROR, "Price is Empty",ButtonType.OK);
+                alert.showAndWait();
+                //  ePrice.setText("Price is Empty");
+            }if(srcImage.isEmpty()){
+                Alert alert = new Alert(Alert.AlertType.ERROR, "Picture is Empty",ButtonType.OK);
+                alert.showAndWait();
+            }
+        }else if(checkIDsame(textID.getText())){
+            Alert alert = new Alert(Alert.AlertType.ERROR, "ID is Same",ButtonType.OK);
+            alert.showAndWait();
+            // eID.setText("ID is Same");
+        }else if (checkNamesame(textName.getText())){
+            Alert alert = new Alert(Alert.AlertType.ERROR, "Name is Same",ButtonType.OK);
+            alert.showAndWait();
+            //eName.setText("ID is Same");
+        }else if (!isAllNumberint(textAmount.getText())){
+            Alert alert = new Alert(Alert.AlertType.ERROR, "Amount is invaild",ButtonType.OK);
+            alert.showAndWait();
+
+        }else if (!isAllNumber(textPrice)){
+            Alert alert = new Alert(Alert.AlertType.ERROR, "Price is invaild",ButtonType.OK);
+            alert.showAndWait();
+        }else if(Integer.parseInt(textAmount.getText())<0){
+            Alert alert = new Alert(Alert.AlertType.ERROR, "Amount is invaild",ButtonType.OK);
+            alert.showAndWait();
+        }else if(Double.parseDouble(textPrice.getText())<=0){
+            Alert alert = new Alert(Alert.AlertType.ERROR, "Price is invaild",ButtonType.OK);
+            alert.showAndWait();
+        }
+        else {
+            String id=textID.getText();
+            String name=textName.getText();
+            int quantity=Integer.parseInt(textAmount.getText());
+            double price=Double.parseDouble(textPrice.getText());
+            Product product=new Product(id,name,price,quantity);
+
+            productDataBase.addProductToDB(product);
+            textID.clear();
+            textName.clear();
+            textAmount.clear();
+            textPrice.clear();
+            srcImage="";
+            upload.setImage(null);
+            showTable();
+            Alert alert = new Alert(Alert.AlertType.INFORMATION, "Complete",ButtonType.OK);
+            alert.showAndWait();
+        }
+    }
+
+
+    public void deletHandle(ActionEvent event)throws Exception{
+        Product selectedItem = tableView.getSelectionModel().getSelectedItem();
+        productDataBase.deleteProduct(selectedItem);
+        tableView.getItems().remove(selectedItem);
+        showTable();
+    }
+
+
+    public void onEditName(TableColumn.CellEditEvent cellEditEvent) {
+        Product selectedItem = tableView.getSelectionModel().getSelectedItem();
+        selectedItem.setName(cellEditEvent.getNewValue()+"");
+        productDataBase.update(selectedItem);
+        showTable();
+
+    }
+    public void onEditAmount(TableColumn.CellEditEvent cellEditEvent) {
+
+        if(isAllNumberint(String.valueOf(cellEditEvent.getNewValue()))){
+            Product selectedItem = tableView.getSelectionModel().getSelectedItem();
+            System.out.println("kkkkkkkkkkkkkkkkkkkkk");
+            if(Integer.valueOf(cellEditEvent.getNewValue()+"") <=0){
+                Alert alert = new Alert(Alert.AlertType.ERROR, "Amount is invaild",ButtonType.OK);
+                alert.showAndWait();
+            }else{
+                selectedItem.setQuantity(Integer.valueOf(detecom(cellEditEvent.getNewValue()+"")));
+                selectedItem.setPrice(Double.parseDouble(detecom(selectedItem.getPrices())));
+                productDataBase.update(selectedItem);
+            }
+        }else{
+            System.out.println("ssssssssssssss");
+            Alert alert = new Alert(Alert.AlertType.ERROR, "Amount is invaild",ButtonType.OK);
+            alert.showAndWait();
+        }
+        showTable();
+    }
+    public void onEditPrice(TableColumn.CellEditEvent cellEditEvent) {
+        if(isAllNumber(cellEditEvent.getNewValue()+"")){
+            Product selectedItem = tableView.getSelectionModel().getSelectedItem();
+            if(Double.valueOf(cellEditEvent.getNewValue()+"") <=0||Double.valueOf(cellEditEvent.getNewValue()+"")>=1000000){
+                Alert alert = new Alert(Alert.AlertType.ERROR, "Price is invaild",ButtonType.OK);
+                alert.showAndWait();
+            }else {
+                selectedItem.setPrice(Double.valueOf(detecom(cellEditEvent.getNewValue()+"")));
+                selectedItem.setQuantity(Integer.parseInt(detecom(selectedItem.getQuantitys())));
+                productDataBase.update(selectedItem);
+            }
+
+        }else {
+            Alert alert = new Alert(Alert.AlertType.ERROR, "Price is invaild",ButtonType.OK);
+            alert.showAndWait();
+        }
+        showTable();
+    }
+    Boolean checkNamesame(String name){
+        ArrayList<Product>a= productDataBase.getAllProduct();
+        for (Product product : a) {
+            if(product.getName().equals(name)){
+                return true;
+            }
+        }
+        return false;
+    }
+    Boolean checkIDsame(String id){
+        ArrayList<Product>a= productDataBase.getAllProduct();
+        for (Product product : a) {
+            if(product.getId().equals(id)){
+                return true;
+            }
+        }
+        return false;
+    }
+    @FXML
+    public void loadPicture(ActionEvent event) {
+        FileChooser fileChooser = new FileChooser();
+        fileChooser.setTitle("Choose your picture");
+        fileChooser.getExtensionFilters().addAll(
+                new FileChooser.ExtensionFilter("Choose \".png\" and \".jpg\" file", "*.png", "*.jpg"));
+        file = fileChooser.showOpenDialog(upload.getScene().getWindow());
+        String[] tmp = file.getAbsolutePath().split("\\\\");
+        String path ="";
+        for (int i = 0; i < tmp.length-1; i++) {
+            path+=tmp[i]+"/";
+            System.out.println(tmp[i]);
+        }
+        path+=tmp[tmp.length-1];
+        System.out.println(path);
+        upload.setImage(new Image("file:///"+path));
+        System.out.println("file:///"+path);
+        srcImage="file:///"+path;
+    }
+    public static boolean isAllNumber(TextField textField) {
+        boolean isCorrect = true;
+        for (int i = 0; i < textField.getText().length(); i++) {
+            if (isCorrect) {
+                if ((textField.getText().charAt(i) + "").matches("[0-9.]+")) {
+                } else {
+                    isCorrect = false;
+                    textField.setStyle("-fx-border-color: red");
+                    return isCorrect;
+                }
+            }
+        }
+        textField.setStyle("");
+        return isCorrect;
+    }
+    public static boolean isAllNumber(String textField) {
+        boolean isCorrect = true;
+        for (int i = 0; i < textField.length(); i++) {
+            if (isCorrect) {
+                if ((textField.charAt(i) + "").matches("[0-9.]+")) {
+                } else {
+                    isCorrect = false;
+                    return isCorrect;
+                }
+            }
+        }
+        return isCorrect;
+    }
+    @FXML
+    public void handlebuttonBack(ActionEvent event) throws IOException {
+        buttonBack= (Button) event.getSource();
+        Stage stage = (Stage)buttonBack.getScene().getWindow();
+        FXMLLoader loader = new FXMLLoader(getClass().getResource("/home.fxml"));
+        stage.setScene(new Scene((Parent) loader.load()));
+        stage.show();
+    }
+    public static boolean isAllNumberint(TextField textField) {
+        boolean isCorrect = true;
+        for (int i = 0; i < textField.getText().length(); i++) {
+            if (isCorrect) {
+                if ((textField.getText().charAt(i) + "").matches("[0-9]+")) {
+                } else {
+                    isCorrect = false;
+                    textField.setStyle("-fx-border-color: red");
+                    return isCorrect;
+                }
+            }
+        }
+        textField.setStyle("");
+        return isCorrect;
+    }
+    public static boolean isAllNumberint(String textField) {
+        boolean isCorrect = true;
+        for (int i = 0; i < textField.length(); i++) {
+            if (isCorrect) {
+                if (!(textField.charAt(i) + "").matches("[0-9]+")) {
+                    isCorrect = false;
+                    return isCorrect;
+                } else {
+                    System.out.println(textField.charAt(i));
+                }
+            }
+        }
+        return isCorrect;
+    }
+    public String detecom(String a){
+        String string="";
+        for (int i = 0; i < a.length(); i++) {
+            if(a.charAt(i)==','){
+            }else {
+                string+=a.charAt(i);
+            }
+        }
+        return string;
+    }
+
+}
Index: src/main/java/controller/homeController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/controller/homeController.java	(date 1584427243930)
+++ src/main/java/controller/homeController.java	(date 1584427243930)
@@ -0,0 +1,46 @@
+package controller;
+
+import javafx.event.ActionEvent;
+import javafx.fxml.FXML;
+import javafx.fxml.FXMLLoader;
+import javafx.scene.Parent;
+import javafx.scene.Scene;
+import javafx.scene.control.Button;
+import javafx.stage.Stage;
+import controller.ApplicationRootController;
+
+import java.io.IOException;
+
+public class homeController {
+    @FXML
+    private Button buttonCashier,buttonManager;
+
+    @FXML
+    public void handlebuttonCashier(ActionEvent event) throws IOException {
+        buttonCashier= (Button) event.getSource();
+        Stage stage = (Stage) buttonCashier.getScene().getWindow();
+        FXMLLoader loader = new FXMLLoader(getClass().getResource("/app.fxml"));
+        ApplicationRootController applicationRootController = loader.getController();
+        stage.setResizable(false);
+        stage.setOnCloseRequest(events -> {
+            if (applicationRootController != null) {
+                applicationRootController.onClose();
+            }
+        });
+//        applicationRootController.init();
+//        applicationRootController.setParentStage(stage);
+        stage.setScene(new Scene((Parent) loader.load()));
+        stage.show();
+
+    }
+
+    @FXML
+    public void handlebuttonManager(ActionEvent event) throws IOException {
+        buttonManager= (Button) event.getSource();
+        Stage stage = (Stage) buttonManager.getScene().getWindow();
+        FXMLLoader loader = new FXMLLoader(getClass().getResource("/itemlist.fxml"));
+        stage.setScene(new Scene((Parent) loader.load()));
+        stage.show();
+
+    }
+}
Index: src/main/java/controller/billController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/controller/billController.java	(date 1584425458216)
+++ src/main/java/controller/billController.java	(date 1584425458216)
@@ -0,0 +1,6 @@
+package controller;
+
+public class billController {
+
+
+}
Index: src/main/java/BarcodeScannerApplication.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/BarcodeScannerApplication.java	(date 1584426837394)
+++ src/main/java/BarcodeScannerApplication.java	(date 1584426837394)
@@ -0,0 +1,42 @@
+
+
+import controller.ApplicationRootController;
+import javafx.application.Application;
+import javafx.fxml.FXMLLoader;
+import javafx.scene.Parent;
+import javafx.scene.Scene;
+import javafx.scene.image.Image;
+import javafx.stage.Stage;
+
+
+public class BarcodeScannerApplication extends Application {
+
+    
+
+    public static void main(String[] args) {
+        launch(args);
+    }
+
+    public void start(Stage primaryStage) {
+        try {
+           
+            FXMLLoader fxmlLoader = new FXMLLoader(getClass().getClassLoader().getResource("home.fxml"));
+            Parent root = fxmlLoader.load();
+           // ApplicationRootController controller = fxmlLoader.getController();
+            Scene scene = new Scene(root, 1365, 1054);
+            primaryStage.setTitle("sssssssssssssssssssssss");
+            primaryStage.setScene(scene);
+//            primaryStage.setResizable(false);
+//            primaryStage.setOnCloseRequest(event -> {
+//                if (controller != null) {
+//                    controller.onClose();
+//                }
+//            });
+//            controller.init();
+//            controller.setParentStage(primaryStage);
+            primaryStage.show();
+        }catch (Exception ex){
+           
+        }
+    }
+}
Index: src/main/resources/bill.fxml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/resources/bill.fxml	(date 1584425457843)
+++ src/main/resources/bill.fxml	(date 1584425457843)
@@ -0,0 +1,56 @@
+<?xml version="1.0" encoding="UTF-8"?>
+
+<?import javafx.scene.control.Button?>
+<?import javafx.scene.control.TableColumn?>
+<?import javafx.scene.control.TableView?>
+<?import javafx.scene.control.TextField?>
+<?import javafx.scene.layout.AnchorPane?>
+<?import javafx.scene.shape.Rectangle?>
+<?import javafx.scene.text.Font?>
+
+<AnchorPane maxHeight="-Infinity" maxWidth="-Infinity" minHeight="-Infinity" minWidth="-Infinity" prefHeight="1024.0" prefWidth="1400.0" xmlns="http://javafx.com/javafx/10.0.1" xmlns:fx="http://javafx.com/fxml/1" fx:controller="controller.billController">
+   <children>
+      <Rectangle arcHeight="5.0" arcWidth="5.0" fill="#006664" height="140.0" layoutX="-23.0" layoutY="-1.0" stroke="BLACK" strokeType="OUTSIDE" strokeWidth="0.0" width="1436.0" />
+      <TextField layoutX="599.0" layoutY="14.0" prefHeight="111.0" prefWidth="144.0" style="-fx-background-color: #B2BB1E;" text="Bill">
+         <font>
+            <Font size="58.0" />
+         </font>
+      </TextField>
+      <TextField layoutX="785.0" layoutY="347.0" prefHeight="77.0" prefWidth="477.0" text="Total">
+         <font>
+            <Font size="35.0" />
+         </font>
+      </TextField>
+      <TextField layoutX="785.0" layoutY="435.0" prefHeight="77.0" prefWidth="477.0" text="Receive">
+         <font>
+            <Font size="35.0" />
+         </font>
+      </TextField>
+      <TextField layoutX="785.0" layoutY="535.0" prefHeight="77.0" prefWidth="477.0" text="Change">
+         <font>
+            <Font size="35.0" />
+         </font>
+      </TextField>
+      <TableView layoutX="40.0" layoutY="170.0" prefHeight="787.0" prefWidth="685.0">
+        <columns>
+          <TableColumn prefWidth="539.0000305175781" text="Item" />
+          <TableColumn prefWidth="141.0" text="Price" />
+        </columns>
+      </TableView>
+      <Button layoutX="785.0" layoutY="823.0" mnemonicParsing="false" prefHeight="73.0" prefWidth="185.0" style="-fx-background-color: green;" text="Submit" textFill="WHITE">
+         <font>
+            <Font size="36.0" />
+         </font>
+      </Button>
+      <Button layoutX="1053.0" layoutY="823.0" mnemonicParsing="false" prefHeight="73.0" prefWidth="185.0" style="-fx-background-color: red;" text="Cancle" textFill="WHITE">
+         <font>
+            <Font size="36.0" />
+         </font>
+      </Button>
+      <TextField layoutX="785.0" layoutY="259.0" prefHeight="77.0" prefWidth="477.0" text="subtotal">
+         <font>
+            <Font size="35.0" />
+         </font>
+      </TextField>
+   </children>
+</AnchorPane>
Index: src/main/java/controller/ApplicationRootController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/controller/ApplicationRootController.java	(date 1584427832980)
+++ src/main/java/controller/ApplicationRootController.java	(date 1584427832980)
@@ -0,0 +1,224 @@
+package controller;
+
+import com.github.sarxos.webcam.Webcam;
+import com.github.sarxos.webcam.WebcamPanel;
+import com.github.sarxos.webcam.WebcamResolution;
+import com.google.zxing.*;
+import com.google.zxing.client.j2se.BufferedImageLuminanceSource;
+import com.google.zxing.client.j2se.MatrixToImageWriter;
+import com.google.zxing.common.HybridBinarizer;
+import javafx.application.Platform;
+import javafx.collections.FXCollections;
+import javafx.collections.ObservableList;
+import javafx.concurrent.Task;
+import javafx.embed.swing.SwingFXUtils;
+import javafx.embed.swing.SwingNode;
+import javafx.event.ActionEvent;
+import javafx.fxml.FXML;
+import javafx.fxml.FXMLLoader;
+import javafx.fxml.Initializable;
+import javafx.scene.Parent;
+import javafx.scene.Scene;
+import javafx.scene.control.*;
+import javafx.scene.image.ImageView;
+import javafx.scene.image.WritableImage;
+import javafx.scene.layout.AnchorPane;
+import javafx.stage.Modality;
+import javafx.stage.Stage;
+import javafx.stage.StageStyle;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+
+import javax.swing.*;
+import java.awt.image.BufferedImage;
+import java.io.IOException;
+import java.net.URL;
+import java.util.ResourceBundle;
+
+/**
+ * Created by Tanuj on 2/12/17.
+ */
+public class ApplicationRootController implements Initializable{
+
+    @FXML
+    public   Button buttonBack;
+    /** UI Controls **/
+    public AnchorPane mainContainer;
+    public AnchorPane webcamContainerAnchorPane;
+    public ListView<String> barcodeListView;
+    public TextField txtBarcodeNumber;
+    public ComboBox<BarcodeFormat> cmbBarcodeType;
+    public Button btnGenerate;
+    public Label lblStatus;
+    private Stage parentStage;
+
+    public Stage getParentStage() {
+        return parentStage;
+    }
+
+    public void setParentStage(Stage parentStage) {
+        this.parentStage = parentStage;
+    }
+
+    ObservableList<BarcodeFormat> options = FXCollections.observableArrayList();
+    private Webcam defaultWebcam = null;
+    private WebcamPanel defaultWebcamPanel = null;
+    private final SwingNode defaultWebcamPanelNode = new SwingNode();
+    Writer writer = new MultiFormatWriter();
+
+    private Runnable barcodeScannerRunnable = null;
+
+
+    @Override
+    public void initialize(URL location, ResourceBundle resources) {
+        defaultWebcam = Webcam.getDefault();
+        defaultWebcam.setViewSize(WebcamResolution.QVGA.getSize());
+        defaultWebcamPanel = new WebcamPanel(defaultWebcam, true);
+        creatDefaultWebcamPanel(defaultWebcamPanelNode);
+        init();
+    }
+
+    private void creatDefaultWebcamPanel(final SwingNode swingNode) {
+        SwingUtilities.invokeLater(() -> {
+            if(defaultWebcamPanel != null) {
+                swingNode.setContent(defaultWebcamPanel);
+            }
+        });
+    }
+
+    public void init(){
+        initUI();
+        barcodeScannerRunnable = getBarcodeReaderThread();
+        new Thread(barcodeScannerRunnable).start();
+    }
+
+    private void initUI() {
+        Platform.runLater(() -> {
+            webcamContainerAnchorPane.getChildren().clear();
+            webcamContainerAnchorPane.getChildren().add(defaultWebcamPanelNode);
+            setRenderBarcodeTypeList();
+        });
+        btnGenerate.setOnAction(event -> generateBarcode());
+
+    }
+
+    private void setRenderBarcodeTypeList() {
+        for(BarcodeFormat barcodeFormat : BarcodeFormat.values()){
+            options.add(barcodeFormat);
+        }
+        cmbBarcodeType.setItems(options);
+    }
+
+    private void generateBarcode() {
+        Task<BufferedImage> barcodeWriterTask = new Task<BufferedImage>() {
+            @Override
+            protected BufferedImage call() throws Exception {
+                String contents = txtBarcodeNumber.getText().trim();
+                BarcodeFormat format = cmbBarcodeType.getSelectionModel().getSelectedItem();
+                int width = 400;
+                int height = 300;
+                if(contents == null || (contents != null && contents.isEmpty()) || format == null){
+                    Platform.runLater(() -> {
+                        Alert alert = new Alert(Alert.AlertType.ERROR);
+                        alert.setContentText("Please enter valid content and barcode format!");
+                        alert.setResult(ButtonType.CLOSE);
+                        alert.initStyle(StageStyle.UNDECORATED);
+                        alert.show();
+                    });
+                    return null;
+                }
+                try {
+                    if(format == BarcodeFormat.QR_CODE){
+                        height = 400;
+                    }
+                    BufferedImage image = MatrixToImageWriter.toBufferedImage(writer.encode(contents, format, width, height));
+                    return image;
+                } catch (Exception e) {
+                    Platform.runLater(() -> {
+                        Alert alert = new Alert(Alert.AlertType.ERROR);
+                        alert.setContentText("Cannot generate barcode reason : " + e.getMessage());
+                        alert.setResult(ButtonType.CLOSE);
+                        alert.initStyle(StageStyle.UNDECORATED);
+                        alert.show();
+                    });
+                    return null;
+                }
+            }
+        };
+
+        barcodeWriterTask.setOnSucceeded(event -> {
+            BufferedImage result = barcodeWriterTask.getValue();
+            if(result != null){
+                openBarcodeModalWindow(result);
+            }
+        });
+
+        new Thread(barcodeWriterTask).start();
+    }
+
+    private void openBarcodeModalWindow(BufferedImage result) {
+        WritableImage image = SwingFXUtils.toFXImage(result, null);
+        Stage stage = new Stage();
+        ImageView imageView = new ImageView(image);
+        imageView.setLayoutX(10);
+        imageView.setLayoutY(10);
+        imageView.setStyle("-fx-border-color: black");
+        AnchorPane parent = new AnchorPane(imageView);
+        parent.setStyle("-fx-background-color: rgba(0, 0, 0, 0.6)");
+        parent.setPrefWidth(image.getWidth() + 20);
+        parent.setPrefHeight(image.getHeight() + 20);
+        stage.setScene(new Scene(parent));
+        stage.setTitle("Generated Barcode");
+        stage.initModality(Modality.WINDOW_MODAL);
+        stage.setResizable(false);
+        stage.initOwner(parentStage);
+        stage.show();
+    }
+
+    private Runnable getBarcodeReaderThread() {
+        return () -> {
+            BufferedImage image = null;
+            Reader reader = new MultiFormatReader();
+            Result lastResult = null;
+            if(defaultWebcam != null){
+                while(defaultWebcam.isOpen()){
+                    if((image = defaultWebcam.getImage()) == null){
+                        continue;
+                    }
+                    try {
+                        LuminanceSource source = new BufferedImageLuminanceSource(image);
+                        BinaryBitmap bitmap = new BinaryBitmap(new HybridBinarizer(source));
+                        final Result result = reader.decode(bitmap);
+                        if(result != null && result.getText() != null) {
+                            if(lastResult == null) {
+
+                                Platform.runLater(() -> barcodeListView.getItems().add(result.getText()));
+                            }else if(lastResult.getText()!= null && !lastResult.getText().equals(result.getText())){
+
+                                Platform.runLater(() -> barcodeListView.getItems().add(result.getText()));
+                            }
+                        }
+                        lastResult = result;
+                    } catch (NotFoundException notEx){
+
+                    }catch (Exception ex) {
+                    }
+                }
+            }
+        };
+    }
+    @FXML
+    public void handlebuttonBack(ActionEvent event) throws IOException {
+        onClose();
+        buttonBack= (Button) event.getSource();
+        Stage stage = (Stage)buttonBack.getScene().getWindow();
+        FXMLLoader loader = new FXMLLoader(getClass().getResource("/home.fxml"));
+        stage.setScene(new Scene((Parent) loader.load()));
+        stage.show();
+    }
+
+    public void onClose() {
+        defaultWebcam.close();
+
+    }
+}
\ No newline at end of file
Index: src/main/resources/home.fxml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/resources/home.fxml	(date 1584425458262)
+++ src/main/resources/home.fxml	(date 1584425458262)
@@ -0,0 +1,22 @@
+<?xml version="1.0" encoding="UTF-8"?>
+
+<?import javafx.scene.control.Button?>
+<?import javafx.scene.layout.AnchorPane?>
+<?import javafx.scene.shape.Rectangle?>
+<?import javafx.scene.text.Font?>
+
+<AnchorPane maxHeight="-Infinity" maxWidth="-Infinity" minHeight="-Infinity" minWidth="-Infinity" prefHeight="1024.0" prefWidth="1400.0" xmlns="http://javafx.com/javafx/10.0.1" xmlns:fx="http://javafx.com/fxml/1" fx:controller="controller.homeController">
+   <children>
+      <Rectangle arcHeight="5.0" arcWidth="5.0" fill="#006664" height="140.0" layoutX="-23.0" layoutY="-1.0" stroke="BLACK" strokeType="OUTSIDE" strokeWidth="0.0" width="1467.0" />
+      <Button fx:id="buttonCashier" layoutX="138.0" layoutY="297.0" mnemonicParsing="false" onAction="#handlebuttonCashier" prefHeight="393.0" prefWidth="360.0" style="-fx-background-color: purple;" text="Cashier" textFill="WHITE">
+         <font>
+            <Font size="67.0" />
+         </font>
+      </Button>
+      <Button fx:id="buttonManager" layoutX="769.0" layoutY="297.0" mnemonicParsing="false" onAction="#handlebuttonManager" prefHeight="393.0" prefWidth="360.0" style="-fx-background-color: orange;" text="Manager" textFill="WHITE">
+         <font>
+            <Font size="67.0" />
+         </font>
+      </Button>
+   </children>
+</AnchorPane>
Index: src/main/resources/itemlist.fxml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/resources/itemlist.fxml	(date 1584425458049)
+++ src/main/resources/itemlist.fxml	(date 1584425458049)
@@ -0,0 +1,42 @@
+<?xml version="1.0" encoding="UTF-8"?>
+
+<?import javafx.scene.control.Button?>
+<?import javafx.scene.control.TableColumn?>
+<?import javafx.scene.control.TableView?>
+<?import javafx.scene.control.TextField?>
+<?import javafx.scene.layout.AnchorPane?>
+<?import javafx.scene.shape.Rectangle?>
+<?import javafx.scene.text.Font?>
+<?import javafx.scene.text.Text?>
+
+<AnchorPane maxHeight="-Infinity" maxWidth="-Infinity" minHeight="-Infinity" minWidth="-Infinity" prefHeight="1024.0" prefWidth="1400.0" xmlns="http://javafx.com/javafx/10.0.1" xmlns:fx="http://javafx.com/fxml/1" fx:controller="controller.itemlistController">
+   <children>
+      <Rectangle arcHeight="5.0" arcWidth="5.0" fill="#006664" height="140.0" layoutX="-23.0" layoutY="-1.0" stroke="BLACK" strokeType="OUTSIDE" strokeWidth="0.0" width="1420.0" />
+      <Text fill="WHITE" layoutX="583.0" layoutY="107.0" strokeType="OUTSIDE" strokeWidth="0.0" text="Item List">
+         <font>
+            <Font size="73.0" />
+         </font>
+      </Text>
+      <Button fx:id="buttonBack" layoutX="1191.0" layoutY="893.0" mnemonicParsing="false" onAction="#handlebuttonBack" prefHeight="73.0" prefWidth="185.0" style="-fx-background-color: blue;" text="Back" textFill="WHITE">
+         <font>
+            <Font size="36.0" />
+         </font>
+      </Button>
+      <TableView fx:id="tableView" layoutX="166.0" layoutY="230.0" prefHeight="651.0" prefWidth="636.0">
+         <columns>
+            <TableColumn fx:id="ID" prefWidth="113.0" text="ID" />
+            <TableColumn fx:id="name" minWidth="0.0" onEditCommit="#onEditName" prefWidth="289.0" text="Name" />
+            <TableColumn fx:id="quantity" minWidth="0.0" onEditCommit="#onEditAmount" prefWidth="117.0" text="Quantity" />
+            <TableColumn fx:id="price" onEditCommit="#onEditPrice" prefWidth="113.0" text="Price" />
+         </columns>
+      </TableView>
+      <TextField fx:id="textID" layoutX="1042.0" layoutY="433.0" promptText="ID" />
+      <TextField fx:id="textName" layoutX="1042.0" layoutY="458.0" promptText="Name" />
+      <TextField fx:id="textAmount" layoutX="1042.0" layoutY="483.0" promptText="Amount" />
+      <TextField fx:id="textPrice" layoutX="1042.0" layoutY="511.0" promptText="Price" />
+      <Button fx:id="addBtn" layoutX="1039.0" layoutY="567.0" mnemonicParsing="false" onAction="#handleAddbtn" text="Add" />
+      <Button fx:id="deletBtn" layoutX="1077.0" layoutY="567.0" mnemonicParsing="false" onAction="#deletHandle" text="Detete" />
+      <Button fx:id="loadPictureBtn" layoutX="1039.0" layoutY="542.0" mnemonicParsing="false" onAction="#loadPicture" text="Load Picture" />
+      <AnchorPane fx:id="webcamPane" layoutX="1017.0" layoutY="223.0" prefHeight="200.0" prefWidth="200.0" />
+   </children>
+</AnchorPane>
Index: src/main/resources/itemdetail.fxml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/resources/itemdetail.fxml	(date 1584425458139)
+++ src/main/resources/itemdetail.fxml	(date 1584425458139)
@@ -0,0 +1,40 @@
+<?xml version="1.0" encoding="UTF-8"?>
+
+<?import javafx.scene.control.Button?>
+<?import javafx.scene.control.TextField?>
+<?import javafx.scene.image.ImageView?>
+<?import javafx.scene.layout.AnchorPane?>
+<?import javafx.scene.shape.Rectangle?>
+<?import javafx.scene.text.Font?>
+
+<AnchorPane maxHeight="-Infinity" maxWidth="-Infinity" minHeight="-Infinity" minWidth="-Infinity" prefHeight="1024.0" prefWidth="1400.0" xmlns="http://javafx.com/javafx/10.0.1" xmlns:fx="http://javafx.com/fxml/1" fx:controller="controller.itemdetailController">
+   <children>
+      <Rectangle arcHeight="5.0" arcWidth="5.0" fill="#006664" height="140.0" layoutX="-23.0" layoutY="-1.0" stroke="BLACK" strokeType="OUTSIDE" strokeWidth="0.0" width="1423.0" />
+      <TextField layoutX="535.0" layoutY="14.0" prefHeight="111.0" prefWidth="331.0" style="-fx-background-color: #B2BB1E;" text="Item Detail">
+         <font>
+            <Font size="58.0" />
+         </font>
+      </TextField>
+      <TextField layoutX="718.0" layoutY="437.0" prefHeight="84.0" prefWidth="547.0" text="Product Name">
+         <font>
+            <Font size="35.0" />
+         </font>
+      </TextField>
+      <TextField layoutX="718.0" layoutY="313.0" prefHeight="84.0" prefWidth="547.0" text="Product No">
+         <font>
+            <Font size="35.0" />
+         </font>
+      </TextField>
+      <TextField layoutX="718.0" layoutY="558.0" prefHeight="84.0" prefWidth="547.0" text="Price">
+         <font>
+            <Font size="35.0" />
+         </font>
+      </TextField>
+      <Button fx:id="buttonBack" layoutX="1080.0" layoutY="807.0" mnemonicParsing="false" prefHeight="73.0" prefWidth="185.0" style="-fx-background-color: blue;" text="Back" textFill="WHITE">
+         <font>
+            <Font size="36.0" />
+         </font>
+      </Button>
+      <ImageView fitHeight="437.0" fitWidth="452.0" layoutX="122.0" layoutY="289.0" pickOnBounds="true" preserveRatio="true" />
+   </children>
+</AnchorPane>
Index: src/main/resources/managerhome.fxml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/resources/managerhome.fxml	(date 1584425457944)
+++ src/main/resources/managerhome.fxml	(date 1584425457944)
@@ -0,0 +1,22 @@
+<?xml version="1.0" encoding="UTF-8"?>
+
+<?import javafx.scene.control.Button?>
+<?import javafx.scene.layout.AnchorPane?>
+<?import javafx.scene.shape.Rectangle?>
+<?import javafx.scene.text.Font?>
+
+<AnchorPane maxHeight="-Infinity" maxWidth="-Infinity" minHeight="-Infinity" minWidth="-Infinity" prefHeight="1024.0" prefWidth="1400.0" xmlns="http://javafx.com/javafx/10.0.1" xmlns:fx="http://javafx.com/fxml/1" fx:controller="controller.managerhomeController">
+   <children>
+      <Rectangle arcHeight="5.0" arcWidth="5.0" fill="#006664" height="140.0" layoutX="-23.0" layoutY="-1.0" stroke="BLACK" strokeType="OUTSIDE" strokeWidth="0.0" width="1422.0" />
+      <Button layoutX="236.0" layoutY="348.0" mnemonicParsing="false" prefHeight="390.0" prefWidth="360.0" style="-fx-background-color: blue;" text="Stock" textFill="WHITE">
+         <font>
+            <Font size="63.0" />
+         </font>
+      </Button>
+      <Button layoutX="771.0" layoutY="348.0" mnemonicParsing="false" prefHeight="390.0" prefWidth="360.0" style="-fx-background-color: red;" text="Finance" textFill="WHITE">
+         <font>
+            <Font size="63.0" />
+         </font>
+      </Button>
+   </children>
+</AnchorPane>
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/vcs.xml	(date 1584428542007)
+++ .idea/vcs.xml	(date 1584428542007)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$" vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
Index: src/main/resources/app.fxml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/resources/app.fxml	(date 1584427675957)
+++ src/main/resources/app.fxml	(date 1584427675957)
@@ -0,0 +1,84 @@
+<?xml version="1.0" encoding="UTF-8"?>
+
+<?import javafx.scene.control.Button?>
+<?import javafx.scene.control.ComboBox?>
+<?import javafx.scene.control.Label?>
+<?import javafx.scene.control.ListView?>
+<?import javafx.scene.control.TableColumn?>
+<?import javafx.scene.control.TableView?>
+<?import javafx.scene.control.TextField?>
+<?import javafx.scene.layout.AnchorPane?>
+<?import javafx.scene.shape.Rectangle?>
+<?import javafx.scene.text.Font?>
+<?import javafx.scene.text.Text?>
+
+<AnchorPane maxHeight="-Infinity" maxWidth="-Infinity" minHeight="-Infinity" minWidth="-Infinity" prefHeight="1024.0" prefWidth="1400.0" xmlns="http://javafx.com/javafx/8.0.172-ea" xmlns:fx="http://javafx.com/fxml/1" fx:controller="controller.ApplicationRootController">
+   <children>
+      <TableView fx:id="tableView" layoutX="845.0" layoutY="169.0" prefHeight="561.0" prefWidth="447.0">
+         <columns>
+            <TableColumn fx:id="Item" prefWidth="199.0" text="Item" />
+            <TableColumn fx:id="Price" prefWidth="79.0" text="Price" />
+            <TableColumn fx:id="Quantity" prefWidth="79.0" text="Quantity" />
+            <TableColumn fx:id="Amount" prefWidth="89.0" text="Amount" />
+         </columns>
+      </TableView>
+      <Button fx:id="Submit" layoutX="856.0" layoutY="796.0" mnemonicParsing="false" prefHeight="73.0" prefWidth="185.0" style="-fx-background-color: green;" text="Submit" textFill="WHITE">
+         <font>
+            <Font size="36.0" />
+         </font>
+      </Button>
+      <Button fx:id="Delete" layoutX="1113.0" layoutY="794.0" mnemonicParsing="false" prefHeight="73.0" prefWidth="185.0" style="-fx-background-color: red;" text="Delete" textFill="WHITE">
+         <font>
+            <Font size="36.0" />
+         </font>
+      </Button>
+      <Button layoutX="598.0" layoutY="191.0" mnemonicParsing="false" prefHeight="25.0" prefWidth="185.0" style="-fx-background-color: grey;" text="Find Member" textFill="WHITE">
+         <font>
+            <Font size="21.0" />
+         </font>
+      </Button>
+      <Button layoutX="650.0" layoutY="247.0" mnemonicParsing="false" prefHeight="99.0" prefWidth="133.0" style="-fx-background-color: grey;" text="Promotion Voucher" textFill="WHITE" wrapText="true">
+         <font>
+            <Font size="21.0" />
+         </font>
+      </Button>
+      <Text layoutX="57.0" layoutY="280.0" strokeType="OUTSIDE" strokeWidth="0.0" text="Hello .......">
+         <font>
+            <Font size="67.0" />
+         </font>
+      </Text>
+      <TextField fx:id="search" layoutX="551.0" layoutY="802.0" promptText="ID  item" />
+      <Button fx:id="add" layoutX="717.0" layoutY="802.0" mnemonicParsing="false" text="add" />
+      <Rectangle arcHeight="5.0" arcWidth="5.0" fill="#006664" height="140.0" layoutX="-23.0" layoutY="-1.0" stroke="BLACK" strokeType="OUTSIDE" strokeWidth="0.0" width="1427.0" />
+      <Text fx:id="total" layoutX="987.0" layoutY="766.0" strokeType="OUTSIDE" strokeWidth="0.0" text="total price : 0.00 bath" textAlignment="RIGHT" wrappingWidth="304.455078125">
+         <font>
+            <Font size="26.0" />
+         </font>
+      </Text>
+      <Button fx:id="buttonBack" layoutX="1237.0" layoutY="933.0" mnemonicParsing="false" onAction="#handlebuttonBack" prefHeight="59.0" prefWidth="149.0" style="-fx-background-color: blue;" text="Back" textFill="WHITE">
+         <font>
+            <Font size="36.0" />
+         </font>
+      </Button>
+      <TextField fx:id="QuantityTF" alignment="CENTER_RIGHT" layoutX="551.0" layoutY="848.0" promptText="Quantity" text="1" />
+      <AnchorPane fx:id="mainContainer1" layoutX="43.0" layoutY="346.0" maxHeight="-Infinity" maxWidth="-Infinity" minHeight="-Infinity" minWidth="-Infinity" prefHeight="400.0" prefWidth="600.0">
+         <children>
+            <AnchorPane fx:id="webcamContainerAnchorPane" layoutX="10.0" layoutY="10.0" maxHeight="-Infinity" maxWidth="-Infinity" minHeight="-Infinity" minWidth="-Infinity" prefHeight="240.0" prefWidth="320.0" style="-fx-border-color: #000000;" />
+            <ListView fx:id="barcodeListView" layoutX="335.0" layoutY="10.0" prefHeight="380.0" prefWidth="260.0" style="-fx-border-color: #000000;" />
+            <TextField fx:id="txtBarcodeNumber" layoutX="30.0" layoutY="260.0" prefHeight="31.0" prefWidth="282.0" promptText="Enter barcode number" />
+            <ComboBox fx:id="cmbBarcodeType" layoutX="30.0" layoutY="299.0" prefHeight="31.0" prefWidth="282.0" promptText="Select barcode standard" />
+            <Button fx:id="btnGenerate" layoutX="132.0" layoutY="337.0" mnemonicParsing="false" text="Generate" />
+            <Label layoutX="14.0" layoutY="375.0" text="Status :">
+               <font>
+                  <Font size="13.0" />
+               </font>
+            </Label>
+            <Label fx:id="lblStatus" layoutX="60.0" layoutY="375.0" style="-fx-text-fill: green;" text="Scanning Barcode ...">
+               <font>
+                  <Font size="13.0" />
+               </font>
+            </Label>
+         </children>
+      </AnchorPane>
+   </children>
+</AnchorPane>
Index: pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- pom.xml	(date 1584424108522)
+++ pom.xml	(date 1584424108522)
@@ -0,0 +1,106 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <modelVersion>4.0.0</modelVersion>
+
+    <groupId>projectS</groupId>
+    <artifactId>sscscsc</artifactId>
+    <version>1.0-SNAPSHOT</version>
+    <dependencies>
+        <dependency>
+            <groupId>com.github.sarxos</groupId>
+            <artifactId>webcam-capture</artifactId>
+            <version>0.3.10</version>
+        </dependency>
+        <dependency>
+            <groupId>org.slf4j</groupId>
+            <artifactId>slf4j-api</artifactId>
+            <version>1.7.22</version>
+        </dependency>
+        <dependency>
+            <groupId>org.slf4j</groupId>
+            <artifactId>slf4j-simple</artifactId>
+            <version>1.7.22</version>
+        </dependency>
+        <dependency>
+            <groupId>com.google.zxing</groupId>
+            <artifactId>core</artifactId>
+            <version>2.1</version>
+        </dependency>
+        <dependency>
+            <groupId>com.google.zxing</groupId>
+            <artifactId>javase</artifactId>
+            <version>2.1</version>
+        </dependency>
+    </dependencies>
+    <build>
+        <plugins>
+            <!-- Compilation Level -->
+            <plugin>
+                <groupId>org.apache.maven.plugins</groupId>
+                <artifactId>maven-compiler-plugin</artifactId>
+                <version>3.6.1</version>
+                <configuration>
+                    <source>1.8</source>
+                    <target>1.8</target>
+                </configuration>
+            </plugin>
+
+            <!--&lt;!&ndash; Maven Shade Plugin &ndash;&gt;
+            <plugin>
+                <groupId>org.apache.maven.plugins</groupId>
+                <artifactId>maven-shade-plugin</artifactId>
+                <version>2.3</version>
+                <executions>
+                    &lt;!&ndash; Run shade goal on package phase &ndash;&gt;
+                    <execution>
+                        <phase>package</phase>
+                        <goals>
+                            <goal>shade</goal>
+                        </goals>
+                        <configuration>
+                            <transformers>
+                                &lt;!&ndash; add Main-Class to manifest file &ndash;&gt;
+                                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
+                                    <mainClass>com.astalh.barcode.BarcodeScannerApplication</mainClass>
+                                </transformer>
+                            </transformers>
+                        </configuration>
+                    </execution>
+                </executions>
+            </plugin>-->
+
+            <!-- Build Native App -->
+            <plugin>
+                <groupId>com.zenjava</groupId>
+                <artifactId>javafx-maven-plugin</artifactId>
+                <version>8.6.0</version>
+                <configuration>
+
+                    <vendor>ASTALH Inc.</vendor>
+                    <mainClass>com.astalh.barcode.BarcodeScannerApplication</mainClass>
+                </configuration>
+                <executions>
+                    <execution>
+                        <!-- required before build-native -->
+                        <id>create-jfxjar</id>
+                        <phase>package</phase>
+                        <goals>
+                            <goal>build-jar</goal>
+                        </goals>
+                    </execution>
+                    <execution>
+                        <id>create-native</id>
+                        <phase>package</phase>
+                        <goals>
+                            <goal>build-native</goal>
+                        </goals>
+                    </execution>
+                </executions>
+            </plugin>
+        </plugins>
+    </build>
+
+
+</project>
\ No newline at end of file
diff --git src/main/resources/icons/barcode.png src/main/resources/icons/barcode.png
new file mode 100644
index 0000000000000000000000000000000000000000..19669cd3de2f2dd9c8f3d0d7aeb9e4bb66fc402f
GIT binary patch
literal 4488
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

